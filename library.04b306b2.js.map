{"mappings":"oeAAAA,EAAA,S,uBCEA,GAFAC,EAAAD,EAAA,UAEAE,0B,WCFA,IAAAC,EAAAH,EAAA,S,uCAKA,MAAMI,EAAO,CACXC,WAAYC,SAASC,cAAc,oBACnCC,UAAWF,SAASC,cAAc,gBAClCE,SAAU,GACVC,YAAa,CAAC,GAiGhB,SAASC,IACPP,EAAKI,UAAUI,UAAUC,IAAI,aAC7BT,EAAKI,UAAUM,UAAY,EAC7B,CAOOC,eAAeC,IACpB,MAAMC,EAAO,CACXC,GAAId,EAAKM,YAAYQ,GACrBC,MAAOf,EAAKM,YAAYS,MACxBC,WAAYhB,EAAKM,YAAYW,YAC7BC,YAAalB,EAAKM,YAAYa,aAC9BC,WAAYpB,EAAKM,YAAYe,SAG/B,EAAAxB,EAAAyB,cAAaT,EACf,CAEAF,eAAeY,IACb,MAAMV,EAAO,CACXC,GAAId,EAAKM,YAAYQ,GACrBC,MAAOf,EAAKM,YAAYS,MACxBC,WAAYhB,EAAKM,YAAYW,YAC7BC,YAAalB,EAAKM,YAAYa,aAC9BC,WAAYpB,EAAKM,YAAYe,SAG/B,EAAAxB,EAAA2B,YAAWX,EACb,CA9HAb,EAAKC,WAAWwB,iBAAiB,SAEjCd,eAA+Be,GAC7B,GAAIA,EAAMC,OAAOnB,UAAUoB,SAAS,oBAClC,OAEF,MACMC,EADcH,EAAMC,OAAOG,QAAQ,aACdC,QAAQjB,GAEnC,IAAIkB,EAAkB,KAClBhC,EAAKK,SAAS4B,OAAS,GACPjC,EAAKK,SAAS6B,MAAKrB,GAAQA,EAAKC,IAAMe,KAG1D,EAAAM,EAAAC,eAAcD,EAAAE,QAEd,MACM/B,SAD4B,EAAAP,EAAAuC,sBAAqBT,IACfU,KAExCvC,EAAKM,YAAcA,EACnBN,EAAKK,SAASmC,KAAKlC,GACnBN,EAAKI,UAAUI,UAAUiC,OAAO,aA2DlC,SAAyBF,GACvB,MAAMG,EAzDR,SAA+BH,GAC7B,MAAMxB,MACJA,EAAK4B,aACLA,EAAYC,WACZA,EAAUC,WACVA,EAAUC,eACVA,EAAcC,SACdA,EAAQ9B,YACRA,EAAWI,OACXA,GACEkB,EACEvB,EAAaC,EACf,kCAAkCA,IAClC,8GACEG,EAAaC,EAAO2B,KAAIC,GAAWA,EAAQC,OAAMC,KAAK,KAE5D,MAAO,6JAG6BnC,mHAGFD,kQAKsC4B,4FAEzBC,sMAKHC,+MAI2BC,2KAI3B1B,qMAKE2B,qFAOhD,CAG0BK,CAAsBb,GAC9CvC,EAAKI,UAAUiD,mBAAmB,YAAaX,IAC/C,EAAAP,EAAAC,eAAcD,EAAAE,QACGnC,SAASC,cAAc,iBAC/BsB,iBAAiB,QAASlB,GACnC+C,OAAO7B,iBAAiB,UAAWlB,GACnC+C,OAAO7B,iBAAiB,QAASlB,GACTL,SAASC,cAAc,sBAC/BsB,iBAAiB,QAASb,GACpBV,SAASC,cAAc,sBAC/BsB,iBAAiB,QAASF,EAC1C,CAvEgDgC,CAAgBvD,EAAKM,YACrE","sources":["src/library.js","src/js/indexLibrary.js","src/js/modalMovieLibrary.js"],"sourcesContent":["import './js/pagination';\nimport './js/variables';\nimport './js/modalTeam';\nimport './js/indexLibrary';\nimport './js/localStorage';\nimport './js/modalMovieLibrary';\n","import { renderfromLocalStorage } from './localStorage';\n\nrenderfromLocalStorage();\n","import { fetchFilmDetailsById } from './fetchDetails';\nimport axios from 'axios';\nimport { loader, displayLoader } from './displayLoader';\nimport { addToWatched, addToQueue } from './localStorage';\n\nconst refs = {\n  galleryBox: document.querySelector('.movies__library'),\n  filmModal: document.querySelector('[data-modal]'),\n  searchId: [],\n  filmDetails: {},\n};\n\nrefs.galleryBox.addEventListener('click', galleryBoxClick);\n\nasync function galleryBoxClick(event) {\n  if (event.target.classList.contains('.movies__library')) {\n    return;\n  }\n  const galleryItem = event.target.closest('[data-id]');\n  const filmId = galleryItem.dataset.id;\n\n  let searchIdDetails = null;\n  if (refs.searchId.length > 0) {\n    searchIdDetails = refs.searchId.find(film => film.id == filmId);\n  }\n\n  displayLoader(loader);\n\n  const filmDetailsResponse = await fetchFilmDetailsById(filmId);\n  const filmDetails = filmDetailsResponse.data;\n\n  refs.filmDetails = filmDetails;\n  refs.searchId.push(filmDetails);\n  refs.filmModal.classList.remove('is-hidden'), renderFilmModal(refs.filmDetails);\n}\n\nfunction createFilmModalMarkup(data) {\n  const {\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    overview,\n    poster_path,\n    genres,\n  } = data;\n  const posterPath = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://www.cloudways.com/blog/wp-content/uploads/How-to-Create-Custom-Codeigniter-404-Not-Found-Page-1.jpg';\n  const genreNames = genres.map(element => element.name).join(' ');\n\n  return `\n    <div class=\"film-modal\">\n      <button class=\"button-close\" type=\"button\" button-modal-close>&#10006</button>\n      <img class=\"film__image\" src=\"${posterPath}\" alt=\"Film Image\" />\n      <article>\n        <div class=\"film__content\">\n          <h2 class=\"film__title\">${title}</h2>\n          <ul class=\"film-info\">\n            <li class=\"film-info__item\">\n              <p class=\"film-info__label\">Vote / Votes</p>\n              <div class=\"film-vote\">\n                <span class=\"film-vote__label film-vote__label--orange\">${vote_average}</span>\n                <span>/</span>\n                <span class=\"film-vote__label\">${vote_count}</span>\n              </div>\n            </li>\n            <li class=\"film-info__item\">\n              <p class=\"film-info__label\">Popularity</p>\n              <span class=\"film-info__text\">${popularity}</span>\n            </li>\n            <li class=\"film-info__item\">\n              <p class=\"film-info__label\">Original Title</p>\n              <span class=\"film-info__text film-info__text--uppercase\">${original_title}</span>\n            </li>\n            <li class=\"film-info__item\">\n              <p class=\"film-info__label\">Genre</p>\n              <span class=\"film-info__text\">${genreNames}</span>\n            </li>\n          </ul>\n          <div class=\"film-description\">\n            <h3 class=\"film-description__title\">About</h3>\n            <p class=\"film-description__text\">${overview}</p>\n          </div>\n        </div>\n        \n      </article>\n    </div>\n  `;\n}\n\nfunction renderFilmModal(data) {\n  const fiimModalMarkup = createFilmModalMarkup(data);\n  refs.filmModal.insertAdjacentHTML('beforeend', fiimModalMarkup);\n  displayLoader(loader);\n  const closeBtn = document.querySelector('.button-close');\n  closeBtn.addEventListener('click', closeModal);\n  window.addEventListener('keydown', closeModal);\n  window.addEventListener('click', closeModal);\n  const addToWatchedBtn = document.querySelector('[button-add-watch]');\n  addToWatchedBtn.addEventListener('click', addToWatchedHandler);\n  const addToQueueBtn = document.querySelector('[button-add-queue]');\n  addToQueueBtn.addEventListener('click', addToQueueHandler);\n}\n\nfunction closeModal() {\n  refs.filmModal.classList.add('is-hidden');\n  refs.filmModal.innerHTML = '';\n}\n\nasync function fetchFilmDetailsByIdCurrent(filmId) {\n  const response = await axios.get(`API_URL/films/${filmId}`);\n  return response.data;\n}\n\nexport async function addToWatchedHandler() {\n  const film = {\n    id: refs.filmDetails.id,\n    title: refs.filmDetails.title,\n    posterPath: refs.filmDetails.poster_path,\n    releaseYear: refs.filmDetails.release_date,\n    genreNames: refs.filmDetails.genres,\n  };\n\n  addToWatched(film);\n}\n\nasync function addToQueueHandler() {\n  const film = {\n    id: refs.filmDetails.id,\n    title: refs.filmDetails.title,\n    posterPath: refs.filmDetails.poster_path,\n    releaseYear: refs.filmDetails.release_date,\n    genreNames: refs.filmDetails.genres,\n  };\n\n  addToQueue(film);\n}\n"],"names":["parcelRequire","$lthku","renderfromLocalStorage","$5y5ap","$380d6cc09a443420$var$refs","galleryBox","document","querySelector","filmModal","searchId","filmDetails","$380d6cc09a443420$var$closeModal","classList","add","innerHTML","async","$380d6cc09a443420$export$11cb4b371f7acf0c","film","id","title","posterPath","poster_path","releaseYear","release_date","genreNames","genres","addToWatched","$380d6cc09a443420$var$addToQueueHandler","addToQueue","addEventListener","event","target","contains","filmId","closest","dataset","searchIdDetails","length","find","$c8RuX","displayLoader","loader","fetchFilmDetailsById","data","push","remove","fiimModalMarkup","vote_average","vote_count","popularity","original_title","overview","map","element","name","join","$380d6cc09a443420$var$createFilmModalMarkup","insertAdjacentHTML","window","$380d6cc09a443420$var$renderFilmModal"],"version":3,"file":"library.04b306b2.js.map"}